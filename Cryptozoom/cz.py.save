#!/usr/bin/env python3

import json, gspread, pprint, os, smtplib, hmac, hashlib, time, urllib.request, urllib.error, urllib.parse, cexio
from twilio_creds import *
from twilio.rest import Client
from requests import Session, Request
from oauth2client.service_account import ServiceAccountCredentials
from requests.exceptions import ConnectionError, Timeout, TooManyRedirects

'''
##############################################################################################################
## Send Email ## https://www.youtube.com/watch?v=B1IsCbXp0uE&t=31s 
def email_alert():

	guser = "clockwork360.dv@gmail.com"
	gpass = "ibeenextfndyonvu"

#----------Taken from https://stackabuse.com/how-to-send-emails-with-gmail-using-python/ ------------
	sent_from = guser
	to = ['clockwork360.dv@gmail.com']
#	to = ['3177341051@tmomail.net']
	subject = 'Got dat shorty doo wop'
	body = 'Fuks wit cha boi'

	email_text = """\
	From: %s
	To: %s
	Subject: %s

	%s
	""" % (sent_from, ", " .join(to), subject, body)
	
#----------------------------------------------------------------------------------------------------

	server = smtplib.SMTP('smtp.gmail.com', 587)
	#server.helo()
	server.starttls()
	server.login(guser, gpass)
	server.sendmail(sent_from, to, email_text)

	server.close()

	print ('Email Sent')
#	print ('SMS Sent')
##############################################################################################################


##############################################################################################################
## Twilio ## Also update credentials to environment variable : https://www.twilio.com/docs/usage/secure-credentials
sid = account_sid token = auth_token twphone = tphone pnum = myphone client = Client(sid, token)

client.messages.create(
	to=pnum,
	from_=twphone,
	body="This shit was da truff my man hit me back!"
)
##############################################################################################################
'''

##############################################################################################################
## CEX API ##   https://github.com/matveyco/cex.io-api-python
myapi = cexio.Api('up125942624', 'QwHotLUGHkmShCNaYgjN52WC56Q', 'XLMwB6aqxy9BULyua7u6im73E48' )
ticker_pair = "Ticker (BTC/USD)"
last_price = (myapi.ticker()['last'])
print (ticker_pair, last_price)
##############################################################################################################

##########################################################################################################>
### Start of the Google Sheets Api Script  | Documentation https://gspread.readthedocs.io/en/latest/
## https://www.techwithtim.net/tutorials/google-sheets-python-api-tutorial/  |  https://www.youtube.com/watch?v=cnPlKLEGR7E
scope = ["https://spreadsheets.google.com/feeds",'https://www.googleapis.com/auth/spreadsheets',"https://www.googleapis.com/auth/drive.file","https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_name("creds.json", scope)
client = gspread.authorize(creds)


## Open the spreadsheet
sheet = client.open("CryptoZoom").sheet1

#---------------------------------------#
## Get a list of all the records
data = sheet.get_all_records()

#----------------------------------------------------------------#
## Get a specific row, column, and the value of a specific cell
#row23 = sheet.row_values(23)
#row24 = sheet.row_values(24)
#row25 = sheet.row_values(25)
#row26 = sheet.row_values(26)
#row27 = sheet.row_values(27)
#row28 = sheet.row_values(28)
#row29 = sheet.row_values(29)
#--colA = sheet.col_values(1)

### Crypto Cells and Percent Change functions ###
def buyin():
    ##BTC/USD 
    id18931356659 = sheet.cell(24,5).value
    return id18931356659

def lp():
    y = last_price
    return y

def percentchange():
    _lp = lp()
    _bi = buyin()
    result = ((float(_lp) - float(_bi))/float(_bi))*100
    print ("{0:.0f}%".format(result))
    return ("{0:.0f}%".format(result))
percentchange()
#----------------------------------------------------#
## Insert the row and  the list as a row at index 4
#--insertRow = ["hello", 5, "red", "blue"]
#--sheet.insert_row(insertRow, 4)

#-----------------------------------#
## Update one cell
btcusd = sheet.update_cell(24,8, percentchange())
#---------------------------------------#
## Get the numbeer of rows in the sheet
#--numRows = sheet.row_count

#---------------#
## Prints
print (row23)
print (row24)
#print (row25)
#print (row26)
#print (row27)
#print (row28)
#print (row29)
#################################################################################################################

## Calling Email Function ##
#--email_alert()

